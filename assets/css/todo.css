.reset-all,
.reset-all:is(:hover, :focus) {
  all: initial;
  font: revert;
  color: inherit;
  outline-width: 2px;
  outline-offset: 10px;
  transition: 200ms outline-offset;
}

.reset-all:focus-visible {
  outline-offset: 0;
  outline-style: solid;
}

.bubble {
  aspect-ratio: 1/1;

  border-radius: 50%;
  border: 1px solid var(--clr-secondary);
}

.focus-within {
  border-radius: inherit;

  pointer-events: none;

  position: absolute;
  inset: 0;
}

/* Font "Josefin Sans" has some vertical blank pixels */
.app-form-input {
  padding-block-start: 5px !important;
}
.app-header-button {
  margin-top: -10px !important;
}

.app {
  --maxW: min(1440px * 0.35, 85%);
  --px: calc((100vw - var(--maxW)) / 2);

  --bg-height: 20rem;

  --border-primary: var(--clr-gray-100);
  --clr-primary: var(--clr-gray-900);
  --clr-secondary: var(--clr-gray-200);
  --bg-primary: var(--clr-neutral-50);
  --bg-secondary: var(--clr-gray-50);

  height: 100vh;
  padding-inline: var(--px);

  color: var(--clr-primary);
  background-color: var(--bg-secondary);

  position: relative;

  transition: 500ms ease-in-out;
  transition-property: color, background-color;
}

.app[data-theme="dark"] {
  --border-primary: var(--clr-gray-800);
  --clr-primary: var(--clr-gray-100);
  --clr-secondary: var(--clr-gray-800);
  --bg-primary: var(--clr-blue-850);
  --bg-secondary: var(--clr-blue-900);
}

@media screen and (min-width: 1440px) {
  .app {
    --bg-height: 30rem;
  }
}

.app::before {
  --bg-image: url("/images/bg-mobile-light.jpg");

  content: "";
  width: 100%;
  height: var(--bg-height);

  background-image: var(--bg-image);
  background-size: cover;

  position: absolute;
  top: 0;
  left: 0;
}

.app[data-theme="dark"]::before {
  --bg-image: url("/images/bg-mobile-dark.jpg");
}

@media screen and (min-width: 1440px) {
  .app::before {
    --bg-image: url("/images/bg-desktop-light.jpg");
  }

  .app[data-theme="dark"]::before {
    --bg-image: url("/images/bg-desktop-dark.jpg");
  }
}

.app-header {
  all: revert;
  padding-block-start: calc(var(--bg-height) * 0.25);
  margin-block-end: calc(var(--bg-height) * 0.15);

  color: var(--clr-neutral-50);

  display: flex;
  align-items: center;
  justify-content: space-between;
}

.app-header-title {
  letter-spacing: 0.25em;
  text-transform: uppercase;

  z-index: 1;
}

.app-header-button,
.app-header-button:is(:hover, :focus, :focus-visible, :active) {
  height: 2.6rem;
  aspect-ratio: 1/1;

  border-radius: 50%;

  color: inherit;

  position: relative;

  transition: 200ms ease;
  transition-property: color, outline-offset;
}

.app-header-button:hover {
  color: var(--clr-gray-100);
}

.app-header-button:focus-visible {
  outline-offset: 2px;
}

.app-header-button:is(:active) {
  color: var(--clr-gray-200);
}

.app-header-button::before {
  --mask-image: url("/images/icon-moon.svg");

  content: "";

  position: absolute;
  inset: 0;

  background-color: currentColor;

  -webkit-mask-size: cover;
  -webkit-mask-image: var(--mask-image);
  -webkit-mask-repeat: no-repeat;

  mask-size: cover;
  mask-image: var(--mask-image);
  mask-repeat: no-repeat;
}

[data-theme="dark"] .app-header-button::before {
  --mask-image: url("/images/icon-sun.svg");
}

.app-form {
  margin-block-end: calc(var(--bg-height) * 0.08);
}

.app-form-label,
.todo {
  width: 100%;
  height: 5rem;

  padding-block: 1.4rem;
  padding-inline: 2.5rem;

  border-radius: 8px;
  background-color: var(--bg-primary);

  display: flex;
  gap: 1em;

  position: relative;
}

:is(.app-form-label, .todo):hover {
  filter: brightness(0.95);
}

:is(.app-form-label, .todo):active {
  filter: brightness(0.9);
}

/* "phoenix.css" have a selector lvl 2 - input[type="text"] */
input.app-form-input,
.todo-text {
  all: initial;
  font: inherit;

  color: var(--clr-primary);

  font-weight: var(--fw-text);
}

:is(input.app-form-input, .todo-checkbox):focus-visible ~ .focus-within {
  outline-style: solid;
  outline-offset: 0;
  z-index: 1;
}

.app-todos {
  font-size: 80%;
}

.app-todos-list {
  margin: 0;
  list-style: none;
  font-size: 125%;
}

.app-footer {
  height: 3.75rem;
  padding-inline: 2.5rem;

  border-block-start: none;
  border-end-start-radius: 8px;
  border-end-end-radius: 8px;

  background-color: var(--bg-primary);

  display: flex;
  align-items: center;
  justify-content: space-between;

  position: relative;
}

/* Fixme: There is whitespace so :empty can not be used */
.app-todos-list:is(:empty, [data-empty]) ~ .app-footer {
  border-radius: 8px;
}

.app-footer-left {
}

.app-footer-filters {
  width: 100%;
  height: inherit;
  margin: 0;
  margin-block-start: calc(3.75rem + var(--bg-height) * 0.08);

  border-radius: 8px;

  background-color: var(--bg-primary);

  list-style: none;

  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;

  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

@media screen and (min-width: 1440px) {
  .app-footer-filters {
    width: auto;
    margin: 0;
    position: static;
    transform: none;
  }
}

.app-footer-clear {
}

.app-footer-clear:hover {
  filter: brightness(1.5);
}

.app-footer-clear:active {
  filter: brightness(2);
}

[data-theme="dark"] .app-footer-clear:hover {
  filter: brightness(0.8);
}

[data-theme="dark"] .app-footer-clear:active {
  filter: brightness(0.7);
}

.filter {
  margin: 0;
}

.filter-button,
.filter-button:is(:hover, :focus, :focus-visible, :active) {
  text-transform: capitalize;
}

.filter-button:not([aria-pressed="true"]):hover {
  filter: brightness(1.5);
}

.filter-button:not([aria-pressed="true"]):active {
  filter: brightness(2);
}

[data-theme="dark"] .filter-button:not([aria-pressed="true"]):hover {
  filter: brightness(0.8);
}

[data-theme="dark"] .filter-button:not([aria-pressed="true"]):active {
  filter: brightness(0.7);
}

.filter-button[aria-pressed="true"] {
  color: var(--clr-blue-500);
}

.todo {
  --border-clr: var(--border-primary);

  margin: 0;

  position: relative;
}

.todo:not(:first-of-type) {
  border-block: 1px solid var(--border-clr);
  border-block-start: none;
  border-radius: 0;
}

.todo:only-of-type {
  border-block-end: 1px solid var(--border-clr);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
}

.todo:not(:only-of-type):first-of-type {
  border-block-end: 1px solid var(--border-clr);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
}

.todo-checkbox {
  margin: 0;

  opacity: 0;

  position: absolute;
  inset: 0;
}

.todo-icon {
  position: relative;
}

.todo-icon::before {
  --mask-image: url("/images/icon-check.svg");

  content: "";

  position: absolute;
  inset: 0.35em;

  -webkit-mask-size: cover;
  -webkit-mask-image: var(--mask-image);
  -webkit-mask-repeat: no-repeat;

  mask-size: cover;
  mask-image: var(--mask-image);
  mask-repeat: no-repeat;
}

.todo-checkbox:checked ~ .todo-icon {
  border: none;
  background-image: var(--bg-gradient);
}

.todo-checkbox:checked ~ .todo-icon::before {
  background-color: var(--clr-neutral-50);
}

.todo-text {
}

.todo-checkbox:checked ~ .todo-text {
  color: var(--clr-secondary);
  text-decoration: line-through;
}

.todo-close,
.todo-close:is(:hover, :focus, :focus-visible) {
  height: 75%;
  aspect-ratio: 1/1;
  margin-left: auto;

  border-radius: 50%;
  outline-offset: 5px;

  position: relative;
}

.todo-close:active {
  color: red;
}

.todo-close::before {
  --mask-image: url("/images/icon-cross.svg");

  content: "";

  position: absolute;
  inset: 0;

  background-color: currentColor;

  -webkit-mask-size: cover;
  -webkit-mask-image: var(--mask-image);
  -webkit-mask-repeat: no-repeat;

  mask-size: cover;
  mask-image: var(--mask-image);
  mask-repeat: no-repeat;
}
